---
#### Master Configuration
# These tasks will be delegated to the host given by repl_parent in the slave's role variables
 - name: Configure Master for replication
   replace: dest=/etc/my.cnf regexp='^#(server_id|log_bin|binlog_format|expire_logs_days)(.*)$' replace='\1\2'
   delegate_to: "{{ repl_parent }}"
   
 - name: Restart Master to apply configuration changes
   service: name={{ mysql_binary }} state=restarted
   delegate_to: "{{ repl_parent }}"

 - name: Add replication user grants
   mysql_user: name={{ repl_username }} host={{ ansible_eth1['ipv4']['address'] }} password={{ repl_password }} priv=*.*:"REPLICATION SLAVE" state=present
   delegate_to: "{{ repl_parent }}"

##### Slave Configuration
 - name: Configure slave for replication
   replace: dest=/etc/my.cnf regexp='^#(server_id|relay_log|relay_log_space_limit|log_slave_updates)(.*)$' replace='\1\2'

 - name: Restart slave to apply configuration changes
   service: name={{ mysql_binary }} state=restarted

 - name: Check if replication is running on slave
   mysql_replication: mode=getslave
   ignore_errors: true
   register: slave_status

 - name: Connect to master
   mysql_replication: mode=changemaster master_host={{ repl_parent }} master_user={{ repl_username }} master_password={{ repl_password }} master_log_file={{ hostvars[repl_parent]['server_id'] }}-{{ hostvars[repl_parent]['name'] }}-bin-log.000001 master_log_pos=4
   when: slave_status|failed
   ignore_errors: true

 - name: Start replication
   mysql_replication: mode=startslave
